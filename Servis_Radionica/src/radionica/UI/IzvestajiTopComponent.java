/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package radionica.UI;

import com.dobrivoje.utilities.datumi.DatumSelektor;
import com.dobrivoje.utilities.warnings.Display;
import ent.Firma;
import ent.Radnik;
import izvestaji.resursi.generatori.ReportGenerator;
import java.util.Collection;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.NbBundle.Messages;
import org.openide.util.Utilities;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//izvestaji.mesecni.radnik//IzvestajMesecniRadnik//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = "IzvestajiTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false, position = 1100)
@ActionID(category = "Window", id = "izvestaji.mesecni.radnik.IzvestajMesecniRadnikTopComponent")

// Izbacujemo iz glavnog menija stavku Izveštaji !
// @ActionReference(path = "Menu/Izveštaji", position = 30000)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_IzvestajMesecniRadnikAction",
        preferredID = "IzvestajMesecniRadnikTopComponent")
@Messages({
    "CTL_IzvestajMesecniRadnikAction=Izveštaj za Radnika",
    "CTL_IzvestajMesecniRadnikTopComponent=Izveštaji Za Radnika",
    "HINT_IzvestajMesecniRadnikTopComponent=Generisanje Izveštaja za Radnika."
})
public final class IzvestajiTopComponent extends TopComponent
        implements LookupListener {

    private Lookup.Result<Radnik> odabraniRadnik;
    private Lookup.Result<Firma> odabranaFirma;
    private Lookup.Result<DatumSelektor> odabraniDatumi;
    //
    private Radnik radnik;
    private Firma firma;
    private DatumSelektor ds;

    public IzvestajiTopComponent() {
        initComponents();
        setName(Bundle.CTL_IzvestajMesecniRadnikTopComponent());
        setToolTipText(Bundle.HINT_IzvestajMesecniRadnikTopComponent());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup_Efikasnost = new javax.swing.ButtonGroup();
        buttonGroup_Majstori = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jTextField_KOMPANIJA = new javax.swing.JTextField();
        jTextField_FIRMA = new javax.swing.JTextField();
        jTextField_ORGJED = new javax.swing.JTextField();
        jTextField_IME = new javax.swing.JTextField();
        jTextField_PREZIME = new javax.swing.JTextField();
        jTextField_SIFRA_RADNIKA = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jTextField_DATUMOD = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField_DATUMDO = new javax.swing.JTextField();
        jCheckBox_AKTIVNI_RADNICI = new javax.swing.JCheckBox();
        jCheckBox_SAMO_RADNICI = new javax.swing.JCheckBox();
        jCheckBox_NEAKTIVNI_RADNICI = new javax.swing.JCheckBox();
        jCheckBox_OSTALI_NALOZI = new javax.swing.JCheckBox();
        jPanel_Klijent1 = new javax.swing.JPanel();
        jRadioButton_Radnik_Clocking = new javax.swing.JRadioButton();
        jRadioButton_Radnik_Analiza = new javax.swing.JRadioButton();
        jRadioButton_Radnik_Savetnici = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jButton_Efikasnost_Radnika_Izvestaj = new javax.swing.JButton();

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jLabel3.text_1")); // NOI18N

        jTextField_KOMPANIJA.setEditable(false);
        jTextField_KOMPANIJA.setText(org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jTextField_KOMPANIJA.text")); // NOI18N

        jTextField_FIRMA.setEditable(false);
        jTextField_FIRMA.setText(org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jTextField_DATUMOD.text")); // NOI18N

        jTextField_ORGJED.setEditable(false);
        jTextField_ORGJED.setText(org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jTextField_ORGJED.text_1")); // NOI18N

        jTextField_IME.setEditable(false);
        jTextField_IME.setText(org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jTextField_IME.text")); // NOI18N

        jTextField_PREZIME.setEditable(false);
        jTextField_PREZIME.setText(org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jTextField_DATUMOD.text")); // NOI18N

        jTextField_SIFRA_RADNIKA.setEditable(false);
        jTextField_SIFRA_RADNIKA.setText(org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jTextField_ORGJED.text_1")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jLabel4.text_1")); // NOI18N

        jTextField_DATUMOD.setEditable(false);
        jTextField_DATUMOD.setText(org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jTextField_DATUMOD.text")); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jLabel7.text")); // NOI18N

        jTextField_DATUMDO.setEditable(false);
        jTextField_DATUMDO.setText(org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jTextField_DATUMOD.text")); // NOI18N

        jCheckBox_AKTIVNI_RADNICI.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox_AKTIVNI_RADNICI.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox_AKTIVNI_RADNICI, org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jCheckBox_AKTIVNI_RADNICI.text")); // NOI18N

        jCheckBox_SAMO_RADNICI.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox_SAMO_RADNICI.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox_SAMO_RADNICI, org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jCheckBox_SAMO_RADNICI.text")); // NOI18N

        jCheckBox_NEAKTIVNI_RADNICI.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox_NEAKTIVNI_RADNICI.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox_NEAKTIVNI_RADNICI, org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jCheckBox_NEAKTIVNI_RADNICI.text")); // NOI18N

        jCheckBox_OSTALI_NALOZI.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox_OSTALI_NALOZI.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox_OSTALI_NALOZI, org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jCheckBox_OSTALI_NALOZI.text")); // NOI18N

        jPanel_Klijent1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jPanel_Klijent1.border.title"))); // NOI18N

        buttonGroup_Efikasnost.add(jRadioButton_Radnik_Clocking);
        org.openide.awt.Mnemonics.setLocalizedText(jRadioButton_Radnik_Clocking, org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jRadioButton_Radnik_Clocking.text")); // NOI18N

        buttonGroup_Efikasnost.add(jRadioButton_Radnik_Analiza);
        org.openide.awt.Mnemonics.setLocalizedText(jRadioButton_Radnik_Analiza, org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jRadioButton_Radnik_Analiza.text")); // NOI18N

        buttonGroup_Efikasnost.add(jRadioButton_Radnik_Savetnici);
        org.openide.awt.Mnemonics.setLocalizedText(jRadioButton_Radnik_Savetnici, org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jRadioButton_Radnik_Savetnici.text")); // NOI18N

        javax.swing.GroupLayout jPanel_Klijent1Layout = new javax.swing.GroupLayout(jPanel_Klijent1);
        jPanel_Klijent1.setLayout(jPanel_Klijent1Layout);
        jPanel_Klijent1Layout.setHorizontalGroup(
            jPanel_Klijent1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_Klijent1Layout.createSequentialGroup()
                .addGroup(jPanel_Klijent1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton_Radnik_Savetnici)
                    .addComponent(jRadioButton_Radnik_Clocking)
                    .addComponent(jRadioButton_Radnik_Analiza))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel_Klijent1Layout.setVerticalGroup(
            jPanel_Klijent1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_Klijent1Layout.createSequentialGroup()
                .addComponent(jRadioButton_Radnik_Clocking, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton_Radnik_Analiza, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jRadioButton_Radnik_Savetnici, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jLabel10.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton_Efikasnost_Radnika_Izvestaj, org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jButton_Efikasnost_Radnika_Izvestaj.text")); // NOI18N
        jButton_Efikasnost_Radnika_Izvestaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Efikasnost_Radnika_IzvestajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_KOMPANIJA)
                                    .addComponent(jTextField_IME))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_FIRMA)
                                    .addComponent(jTextField_PREZIME))
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField_SIFRA_RADNIKA, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextField_ORGJED, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_DATUMDO)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_DATUMOD))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jCheckBox_AKTIVNI_RADNICI)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBox_NEAKTIVNI_RADNICI)
                                .addGap(16, 16, 16))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox_SAMO_RADNICI, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCheckBox_OSTALI_NALOZI))
                                .addContainerGap())))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator8))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton_Efikasnost_Radnika_Izvestaj, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel_Klijent1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 125, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_KOMPANIJA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_FIRMA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_ORGJED, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_IME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PREZIME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_SIFRA_RADNIKA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_DATUMOD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_DATUMDO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox_AKTIVNI_RADNICI)
                            .addComponent(jCheckBox_NEAKTIVNI_RADNICI))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox_SAMO_RADNICI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox_OSTALI_NALOZI)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_Klijent1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jButton_Efikasnost_Radnika_Izvestaj)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel3.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiTopComponent.jLabel3.text_1")); // NOI18N
        jTextField_KOMPANIJA.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(IzvestajiTopComponent.class, "IzvestajiOrgJedTopComponent.jTextField_KOMPANIJA.text")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_Efikasnost_Radnika_IzvestajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Efikasnost_Radnika_IzvestajActionPerformed
        // TODO add your handling code here:
        if (jRadioButton_Radnik_Clocking.isSelected()) {
            try {
                new ReportGenerator()
                        .generisanjeIzvestaja_ClockingZaPeriod(
                                radnik.getIDRadnik(),
                                ds.getYMDDatumOD(),
                                ds.getYMDDatumDO());

            } catch (NullPointerException e) {
                Display.obavestenjeBaloncic("Radnik nije odabran.",
                        "Odaberite radnika u prozoru \"Aktivni radnici\", ili u Pretraživaču.",
                        Display.TIP_OBAVESTENJA.GRESKA);
            } catch (Exception e) {
                Display.obavestenjeBaloncic("Greška.", e.getMessage(), Display.TIP_OBAVESTENJA.GRESKA);
            }
        } else if (jRadioButton_Radnik_Analiza.isSelected()) {
            try {

                new ReportGenerator()
                        .generisanjeIzvestaja_AnalizaVremena(
                                radnik.getIDRadnik(),
                                ds.getYMDDatumOD(),
                                ds.getYMDDatumDO());

            } catch (NullPointerException e) {
                Display.obavestenjeBaloncic("Radnik nije odabran.",
                        "Odaberite radnika u prozoru \"Aktivni radnici\", ili u Pretraživaču.",
                        Display.TIP_OBAVESTENJA.GRESKA);
            } catch (Exception e) {
                Display.obavestenjeBaloncic("Greška.", e.getMessage(), Display.TIP_OBAVESTENJA.GRESKA);
            }

        } else if (jRadioButton_Radnik_Savetnici.isSelected()) {
            try {
                new ReportGenerator()
                        .generisanjeIzvestaja_SavetniciFinansijskiIzvestaj(
                                ds.getYMDDatumOD(),
                                ds.getYMDDatumDO()
                        );

            } catch (NullPointerException e) {
                Display.obavestenjeBaloncic("Greška.", "Odaberite početni i krajni datum.",
                        Display.TIP_OBAVESTENJA.GRESKA);
            } catch (Exception ex) {
                Display.obavestenjeBaloncic("Greška.", ex.getMessage(), Display.TIP_OBAVESTENJA.GRESKA);
            }
        }
    }//GEN-LAST:event_jButton_Efikasnost_Radnika_IzvestajActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup_Efikasnost;
    private javax.swing.ButtonGroup buttonGroup_Majstori;
    private javax.swing.JButton jButton_Efikasnost_Radnika_Izvestaj;
    private javax.swing.JCheckBox jCheckBox_AKTIVNI_RADNICI;
    private javax.swing.JCheckBox jCheckBox_NEAKTIVNI_RADNICI;
    private javax.swing.JCheckBox jCheckBox_OSTALI_NALOZI;
    private javax.swing.JCheckBox jCheckBox_SAMO_RADNICI;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel_Klijent1;
    private javax.swing.JRadioButton jRadioButton_Radnik_Analiza;
    private javax.swing.JRadioButton jRadioButton_Radnik_Clocking;
    private javax.swing.JRadioButton jRadioButton_Radnik_Savetnici;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTextField jTextField_DATUMDO;
    private javax.swing.JTextField jTextField_DATUMOD;
    private javax.swing.JTextField jTextField_FIRMA;
    private javax.swing.JTextField jTextField_IME;
    private javax.swing.JTextField jTextField_KOMPANIJA;
    private javax.swing.JTextField jTextField_ORGJED;
    private javax.swing.JTextField jTextField_PREZIME;
    private javax.swing.JTextField jTextField_SIFRA_RADNIKA;
    // End of variables declaration//GEN-END:variables

    @Override
    public
            void componentOpened() {
        odabranaFirma = Utilities
                .actionsGlobalContext()
                .lookupResult(Firma.class
                );

        odabranaFirma.addLookupListener(
                new LookupListener() {
                    @Override
                    public void resultChanged(LookupEvent le
                    ) {
                        Lookup.Result lr = (Lookup.Result) le.getSource();
                        Collection<Firma> firme = lr.allInstances();

                        if (firme != null) {
                            for (Firma f1 : firme) {
                                firma = f1;

                                jTextField_KOMPANIJA.setText(firma.getFkIdk().getNazivKompanije());
                                jTextField_FIRMA.setText(firma.getNaziv());
                            }
                        }
                    }
                }
        );

        odabraniRadnik = Utilities
                .actionsGlobalContext()
                .lookupResult(Radnik.class);

        LookupListener ll1 = new LookupListener() {
            @Override
            public void resultChanged(LookupEvent le) {
                Lookup.Result lr = (Lookup.Result) le.getSource();
                Collection<Radnik> radnici = lr.allInstances();

                if (radnici != null) {
                    for (Radnik r1 : radnici) {
                        radnik = r1;
                        if (firma == null) {
                            firma = radnik.getFKIDOrgjed().getFKIDFirma();
                        }

                        jTextField_KOMPANIJA.setText(radnik.getFKIDOrgjed().getFKIDFirma().getFkIdk().getNazivKompanije());
                        jTextField_FIRMA.setText(radnik.getFKIDOrgjed().getFKIDFirma().getNaziv());
                        jTextField_ORGJED.setText(radnik.getFKIDOrgjed().getNaziv());

                        jTextField_IME.setText(radnik.getIme());
                        jTextField_PREZIME.setText(radnik.getPrezime());
                        jTextField_SIFRA_RADNIKA.setText(Long.toString(radnik.getIDRadnik()));
                    }
                }
            }
        };

        odabraniRadnik.addLookupListener(ll1);

        ll1.resultChanged(
                new LookupEvent(odabraniRadnik));

        odabraniDatumi = WindowManager
                .getDefault()
                .findTopComponent("PretrazivacTopComponent")
                .getLookup()
                .lookupResult(DatumSelektor.class);

        LookupListener ll2 = new LookupListener() {
            @Override
            public void resultChanged(LookupEvent le) {
                Lookup.Result lrds = (Lookup.Result) le.getSource();
                Collection<DatumSelektor> datumi = lrds.allInstances();

                for (DatumSelektor ds1 : datumi) {
                    ds = ds1;

                    jTextField_DATUMOD.setText(ds.getYMDDatumOD());
                    jTextField_DATUMDO.setText(ds.getYMDDatumDO());
                }
            }
        };

        odabraniDatumi.addLookupListener(ll2);

        ll2.resultChanged(
                new LookupEvent(odabraniDatumi));
    }

    @Override
    public void componentClosed() {
        odabranaFirma.removeLookupListener(this);
        odabranaFirma = null;

        odabraniRadnik.removeLookupListener(this);
        odabraniRadnik = null;

        odabraniDatumi.removeLookupListener(this);
        odabraniDatumi = null;
    }
    //<editor-fold defaultstate="collapsed" desc="ne treba mi,...">

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public void resultChanged(LookupEvent le) {
        throw new UnsupportedOperationException();
    }
    //</editor-fold>

}
